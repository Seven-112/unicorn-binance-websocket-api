[report]
exclude_lines =
    pragma: no cover
    except
    if warn_on_update and self.is_update_availabe()
    if sys.platform.startswith('Windows')
    self.process_stream_data = process_stream_data
    self.websocket_base_uri = "
    stream_row_color
    def get(self, statusformat, checkcommandversion=False)
    elif self.ubwa.exchange
    elif self.exchange
    if request_handler.status_code == "
    def redirect_to_wiki
    while len(self.ringbuffer_error)
    while len(self.ringbuffer_result)
    if self.stream_list[stream_id]['listen_key'] is not False
    return "unknown"
    if "!userData" in active_stream_list[stream_id]['markets']
    if self.restart_requests[stream_id]['status'] != "new":
    if channel == "allMiniTickers" or
    if re.match(r'[a-zA-Z0-9]{41,43}', market) is not None
    elif isinstance(markets, bool)
    if warn_on_update is True
    return False
    return response
    if uri is False
    pass
    if (active_stream_list[stream_id]['start_time'] + active_stream_list[stream_id]['listen_key_cache_time'])
    self.restart_requests[stream_id]['status'] = "new"
    if self.stream_list[stream_id]['subscriptions']
    if type(self.stream_list[stream_id]
    if type(channels)
    if type(markets)